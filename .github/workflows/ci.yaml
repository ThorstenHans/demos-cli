name: Build and Publish Release

on:
  push:
    tags:
      - 'v*'  # triggers only when pushing version tags (e.g., v1.2.3)

permissions:
  contents: write

jobs:
  build:
    name: Build for All Platforms
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    env:
      MODULE_PATH: github.com/thorstenhans/demos-over-ssh/internal/demo
      CLI_MODULE_PATH: github.com/thorstenhans/demos-over-ssh/bin/demo/commands
      BUILD_DIR: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.x'

      - name: Extract version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Build binary (${{ matrix.goos }}-${{ matrix.goarch }})
        run: |
          mkdir -p $BUILD_DIR
          output="${BUILD_DIR}/demo_${{ matrix.goos }}_${{ matrix.goarch }}"
          if [ "${{ matrix.goos }}" == "windows" ]; then
            output="${output}.exe"
          fi

          echo "Building version ${{ steps.get_version.outputs.version }} for ${{ matrix.goos }}/${{ matrix.goarch }}..."

          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build \
            -ldflags="-X '${{ env.MODULE_PATH }}.Salt=${{ secrets.BUILD_SALT }}' -X '${{ env.CLI_MODULE_PATH }}.Version=${{ steps.get_version.outputs.version }}'" \
            -o "$output" .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: demo_${{ github.ref_name }}_${{ matrix.goos }}_${{ matrix.goarch }}
          path: build/

  release:
    name: Publish GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
            pattern: demo_${{ github.ref_name }}_*
            path: build/
            merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
